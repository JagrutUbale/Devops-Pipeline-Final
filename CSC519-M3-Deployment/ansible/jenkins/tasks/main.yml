- name: Installing Git - Maven
  apt: 
    name: "{{ item }}" 
    state: present
    update_cache: yes
  with_items: 
    - git
    - maven
    - software-properties-common

- name: Adding ansible Apt Repository
  apt_repository:
    repo: 'ppa:ansible/ansible'

- name: Installing ansible
  apt:
    name: ansible  
    state: present
    update_cache: yes

- name: Adding Oracle Apt Repository
  apt_repository:
    repo: 'ppa:webupd8team/java'
 
- name: Adding Permission For Oracle
  debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'

- name: Installing Java-8
  apt:
    name: oracle-java8-installer     
    state: present
    update_cache: yes

- name: Adding Apt Key For Jenkins
  apt_key:
    url: "https://jenkins-ci.org/debian/jenkins-ci.org.key"
    state: present
    validate_certs: no

- name: Check For Jenkins List    
  stat: path=/etc/apt/sources.list.d/jenkins.list
  register: jenkins_list

- name: Adding Jenkins Source List
  shell: sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
  when: not jenkins_list.stat.exists

- name: Installing Jenkins
  apt:
    name: jenkins     
    state: present
    update_cache: yes
  register: jenkins_install

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  when: jenkins_install.changed

- name: "Wait For Jenkins To Come Up"
  uri:
    url: "{{jenkins_url}}"
    status_code: 403
  register: result
  until: result.status == 403
  retries: 6
  delay: 15
  when: jenkins_install.changed

- name: Creating Directory For Groovy Script - Jenkins
  file:
    path: "{{jenkins_path}}/init.groovy.d"
    state: directory
    mode: 0755
  register: groovy_dir

- name: Copying Groovy Script For Deafult Jenkins User Creation
  template:
    force: yes
    src: "templates/jenkins_script.groovy.j2"
    dest: "{{jenkins_path}}/init.groovy.d/basic-security.groovy"
    mode: 0755
  when: groovy_dir.changed
  
- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  when: groovy_dir.changed

- name: "Wait For Jenkins To Come Up"
  uri:
    url: "{{jenkins_url}}/cli/"
    status_code: 403
  register: result
  until: result.status == 403
  retries: 6
  delay: 15
  when: groovy_dir.changed

- name: Removing Groovy Script
  file:
    path: "{{jenkins_path}}/init.groovy.d/basic-security.groovy"
    state: absent

- name: Downloading Jenkins CLI Jar
  get_url:
    url: "{{jenkins_url}}/jnlpJars/jenkins-cli.jar"
    dest: "{{home_path}}/"
    mode: 0755

- name: Install Jenkin Plugins 
  jenkins_plugin:
    name: "{{ item }}"
    params: "{{ jenkins_params }}"
  with_items:
    - maven-plugin
    - github
    - jacoco
    - junit
    - test-stability
    - postbuild-task
    - build-timeout
  register: jenkins_plugins

- name: Setting number of executors to 1
  become: true
  command: "sed -ie 's#<numExecutors>[^<][^<]*</numExecutors>#<numExecutors>1</numExecutors>#' {{jenkins_path}}/config.xml"

- name: Restarting Jenkins
  service:
    name: jenkins
    state: restarted
  when: jenkins_plugins.changed

- name: "Wait For Jenkins To Come Up"
  uri:
    url: "{{jenkins_url}}/cli/"
    status_code: 403
  register: result
  until: result.status == 403
  retries: 6
  delay: 15
  when: jenkins_plugins.changed

- name: Checking Jenkins State
  service:
    name: jenkins
    state: started

- name: Checking Credentials In Jenkins
  become: true
  shell: "java -jar {{home_path}}/jenkins-cli.jar -s {{jenkins_url}} get-credentials-as-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" \"git_token\" --username {{jenkins_user}} --password {{jenkins_password}}"
  register: git_creds
  ignore_errors: yes
  changed_when: "git_creds.stdout.find('git_token') == -1"

- name: Copying Git Credentials XML
  template:
    force: yes
    src: "templates/jenkins_git_creds.j2"
    dest: "{{home_path}}/git_creds.xml"
    mode: 0755
  when: "git_creds.stdout.find('git_token') == -1"

- name: Adding Git Credentials In Jenkins
  become: true
  shell: "cat git_creds.xml | java -jar {{home_path}}/jenkins-cli.jar -s {{jenkins_url}} create-credentials-by-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" --username {{jenkins_user}} --password {{jenkins_password}}"
  when: "git_creds.stdout.find('git_token') == -1"

- name: Removing Git Credentials file
  file:
    path: "{{home_path}}/git_creds.xml"
    state: absent

- name: Checking Job List For iTrust
  become: true
  shell: "java -jar {{home_path}}/jenkins-cli.jar -s {{jenkins_url}} list-jobs --username {{jenkins_user}} --password {{jenkins_password}}"
  register: job_itrust
  changed_when: "job_itrust.stdout.find('iTrust') == -1"

# - name: Copying itrust.xml 
#   copy: 
#     src: files/itrust.xml
#     dest: "{{home_path}}/itrust.xml"
#   when: "job_itrust.stdout.find('iTrust') == -1"

- name: Copying itrust.xml from template
  template: 
    force: yes
    src: "templates/itrust.xml.j2"
    dest: "{{home_path}}/itrust.xml"
  when: "job_itrust.stdout.find('iTrust') == -1"

- name: Copy itrust deployment ansible script
  become: true
  copy:
    src: files/itrust_deployment/
    dest: "{{home_path}}/itrust_deployment"
    mode: 0644

- name: Adding the inventory file for itrust deployment
  template:
    force: yes
    src: "templates/inventory.j2"
    dest: "{{home_path}}/itrust_deployment/inventory"
    mode: 0755

- name: Adding deployment key
  become: yes
  copy:
    src: "{{ansible_ssh_private_key_file}}"
    dest: "{{home_path}}/itrust_deployment/node_rsa"
    mode: 0500

- name: Making jenkins the owner of key
  become: yes
  shell: "chown jenkins {{home_path}}/itrust_deployment/node_rsa"

- name: Setting git credentials for deployment
  become: true
  shell: echo "{{git_token}}" > {{home_path}}/itrust_deployment/token

- name: Setting git credentials for deployment
  become: true
  shell: echo "{{ansible_user}}" > {{home_path}}/itrust_deployment/user

- name: Create Jenkins iTrust Job Using XML
  become: true
  shell: "java -jar {{home_path}}/jenkins-cli.jar -s {{jenkins_url}} create-job iTrust < {{home_path}}/itrust.xml --username {{jenkins_user}} --password {{jenkins_password}}"
  when: "job_itrust.stdout.find('iTrust') == -1"

- name: Removing iTrust XML file
  file:
    path: "{{home_path}}/itrust.xml"
    state: absent

- name: Checking Job List For checkbox.io
  become: true
  shell: "java -jar {{home_path}}/jenkins-cli.jar -s {{jenkins_url}} list-jobs --username {{jenkins_user}} --password {{jenkins_password}}"
  register: job_checkbox
  changed_when: "job_checkbox.stdout.find('checkbox.io') == -1"

- name: Copying Checkbox.io Job XML 
  template: 
    force: yes
    src: templates/checkbox_job.xml.j2
    dest: "{{home_path}}/checkbox.xml"
  when: "job_checkbox.stdout.find('checkbox.io') == -1"

- name: Create Jenkins Jobs for checkbox.io Using XML
  become: true
  shell: "java -jar {{home_path}}/jenkins-cli.jar -s {{jenkins_url}} create-job checkbox.io < {{home_path}}/checkbox.xml --username {{jenkins_user}} --password {{jenkins_password}}"
  when: "job_checkbox.stdout.find('checkbox.io') == -1"

- name: Removing Checkbox.io XML file
  file:
    path: "{{home_path}}/checkbox.xml"
    state: absent

- name: Copy Ansible for Checkbox Deployment
  copy:
    src: files/checkbox_deployment/
    dest: "{{home_path}}/checkbox_deployment"
    mode: 0644

- name: Adding Inventory File Checkbox Deployment
  template:
    force: yes
    src: "templates/inventory_checkbox.j2"
    dest: "{{home_path}}/checkbox_deployment/inventory"
    mode: 0755